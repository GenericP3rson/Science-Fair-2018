/** Vol is the basic building block of all data in a net.
 * it is essentially just a 3D volume of numbers, with a
 * width (sx), height (sy), and depth (depth).
 * it is used to hold data for all filters, all volumes,
 * all weights, and also stores all gradients w.r.t.
 * the data. c is optionally a value to initialize the volume
 * with. If c is missing, fills the Vol with random numbers.
*/
export declare class Vol {
    sx: number;
    sy: number;
    depth: number;
    w: number[] | Float64Array;
    dw: number[] | Float64Array;
    constructor(sx_or_list: number | number[], sy?: number, depth?: number, c?: number);
    get(x: number, y: number, d: number): number;
    set(x: number, y: number, d: number, v: number): void;
    add(x: number, y: number, d: number, v: number): void;
    get_grad(x: number, y: number, d: number): number;
    set_grad(x: number, y: number, d: number, v: number): void;
    add_grad(x: number, y: number, d: number, v: number): void;
    cloneAndZero(): Vol;
    clone(): Vol;
    addFrom(V: Vol): void;
    addFromScaled(V: Vol, a: number): void;
    setConst(a: number): void;
    toJSON(): VolJSON;
    fromJSON(json: VolJSON): void;
}
export interface VolJSON {
    sx: number;
    sy: number;
    depth: number;
    w: number[] | Float64Array;
}
