/**
 * a window stores _size_ number of values
 * and returns averages. Useful for keeping running
 * track of validation or training accuracy during SGD
 */
export declare class Window {
    v: number[];
    size: number;
    minsize: number;
    sum: number;
    constructor(size?: number, minsize?: number);
    add(x: number): void;
    get_average(): number;
    reset(): void;
}
export interface MaxMinResult {
    maxi?: number;
    maxv?: number;
    mini?: number;
    minv?: number;
    dv?: number;
}
/**
 * returns min, max and indeces of an array
 */
export declare function maxmin(w: number[]): MaxMinResult;
/**
 * returns string representation of float
 * but truncated to length of d digits
 */
export declare function f2t(x: number, d?: number): string;
