import { Vol } from "./convnet_vol";
import { Net } from "./convnet_net";
export interface TrainerOptions {
    learning_rate?: number;
    l1_decay?: number;
    l2_decay?: number;
    batch_size?: number;
    method?: string;
    momentum?: number;
    ro?: number;
    eps?: number;
    beta1?: number;
    beta2?: number;
}
export declare class Trainer {
    net: Net;
    regression: boolean;
    learning_rate: number;
    l1_decay: number;
    l2_decay: number;
    batch_size: number;
    method: string;
    momentum: number;
    ro: number;
    eps: number;
    beta1: number;
    beta2: number;
    k: number;
    gsum: Array<number[] | Float64Array>;
    xsum: Array<number[] | Float64Array>;
    constructor(net: Net, options: TrainerOptions);
    train(x: Vol, y: number | number[] | Float64Array | {
        [key: string]: number;
    }): {
        fwd_time: number;
        bwd_time: number;
        l2_decay_loss: number;
        l1_decay_loss: number;
        cost_loss: number;
        softmax_loss: number;
        loss: number;
    };
}
