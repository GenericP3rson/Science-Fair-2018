import { Vol } from "./convnet_vol";
import { LayerBase, LayerOptions, ILayer, LayerJSON, ParamsAndGrads } from "./layers";
export interface LocalResponseNormalizationLayerOptions extends LayerOptions {
    /** <required> */
    k: number;
    /** <required> */
    n: number;
    /** <required> */
    alpha: number;
    /** <required> */
    beta: number;
}
/**
 * a bit experimental layer for now. I think it works but I'm not 100%
 * the gradient check is a bit funky. I'll look into this a bit later.
 * Local Response Normalization in window, along depths of volumes
 */
export declare class LocalResponseNormalizationLayer extends LayerBase implements ILayer {
    k: number;
    n: number;
    alpha: number;
    beta: number;
    in_act: Vol;
    out_act: Vol;
    S_cache_: Vol;
    constructor(opt?: LayerOptions);
    forward(V: Vol): Vol;
    backward(): void;
    getParamsAndGrads(): ParamsAndGrads[];
    toJSON(): LayerJSON;
    fromJSON(json: LayerJSON): void;
}
